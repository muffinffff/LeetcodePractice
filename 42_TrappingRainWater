// 42. Trapping Rain Water
// 原理：短板效应，桶能盛水的能力取决于短的那块板子
// 盛水量是左右板中短的那块的高度min(left_max[i],right[i]) - 当前底板的高度height[i]
// left_max存储左起当前最高的板子高度（左边板子）
func trap(height []int) int {
	length := len(height)
	left_max := make([]int, length)
	right_max := make([]int, length)
	left_max[0] = height[0]
	for i := 1; i < length; i++ {
		left_max[i] = Max(left_max[i-1], height[i])
	}
	right_max[length-1] = height[length-1]
	for i := length - 2; i >= 0; i-- {
		right_max[i] = Max(right_max[i+1], height[i])
	}
	result := 0
	for i := 0; i < length; i++ {
		result += Min(left_max[i], right_max[i]) - height[i]
	}
	return result
}

func Max(x int, y int) int {
	if x < y {
		return y
	} else {
		return x
	}
}

func Min(x int, y int) int {
	if x < y {
		return x
	} else {
		return y
	}
}